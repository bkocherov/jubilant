<?xml version="1.0" encoding="UTF-8"?>
<!-- 
   Copyright 2017 Roland.Bouman@gmail.com, just-bi.nl

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<core:FragmentDefinition
  xmlns:m="sap.m"
  xmlns:core="sap.ui.core"
  xmlns:t="sap.ui.table"
  xmlns:app="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
>
<t:TreeTable
  width="100%"
  selectionMode="None"
  columnHeaderVisible="false"
  columnHeaderHeight="0"
  enableColumnReordering="false"
  numberOfExpandedLevels="1"
  rows="{
    path: 'visualisationState>/visualisationEditorComponents/jubilant.components.visualisation.VisualisationFilterAreaManager/nodes',
    parameters: {
      arrayNames: ['nodes']
    }
  }"
  id="filterArea"
  app:visualisationEditorComponentDefaultVisible="false"
  app:visualisationEditorComponent="jubilant.components.visualisation.VisualisationFilterAreaManager"
  app:visualisationEditorComponentIcon="sap-icon://filter"
  tooltip="{i18n>filterLabel.text}"
  visibleRowCountMode="Interactive"
  visibleRowCount="2"
  minAutoRowCount="2"
>
  <t:toolbar>
    <m:Toolbar>
      <m:Button 
        tooltip="{i18n>clearFilterButton.tooltip}"
        icon="sap-icon://clear-filter"
        press="onClearFilterButtonPressed"
      />
      <m:Label text="{i18n>filterLabel.text}:"/>
    </m:Toolbar>
  </t:toolbar>
  <t:columns>
    <t:Column hAlign="Begin">
      <t:template>
        <m:HBox width="100%">
          <m:Select
            visible="{= ${visualisationState>logicalOperator} ? true : false}"
            width="110px"
            items="{
              path: 'logicalOperators>/logicalOperators',
              templateShareable: false
            }"
            selectedKey="{visualisationState>logicalOperator}"
            tooltip="{i18n>filter.logicalOperator.tooltip}"
            placeholder="{i18n>filter.logicalOperator.placeholder}"
            change="onLogicalOperatorChanged"
          >
            <core:Item
              key="{logicalOperators>id}"
              text="{logicalOperators>label}"
            />
          </m:Select>
          <m:ComboBox
            width="100%"
            visible="{= ${visualisationState>relationalOperator} ? true : false}"
            items="{
              path: 'entitySetDescriptorModel>/queryProperties',
              filters: [{
                path: '',
                test: '._isPropertyFilterable'
              }],
              sorter: {
                path: 'oDataProperty/name'
              },
              templateShareable: false
            }"
            selectedKey="{visualisationState>field}"
            tooltip="{i18n>filter.field.tooltip}"
            placeholder="{i18n>filter.field.placeholder}"
            selectionChange="onFilterFieldChanged"
          >
            <core:ListItem
              key="{entitySetDescriptorModel>oDataProperty/name}"
              text="{
                path: 'entitySetDescriptorModel>',
                formatter: '.getLabelTextForPropertyDescriptor'
              }"
            />
          </m:ComboBox>
        </m:HBox>
      </t:template>
    </t:Column>
    <t:Column width="140px">
      <t:template>
        <m:Select
          visible="{= ${visualisationState>relationalOperator} ? true : false}"
          width="100%"
          items="{
            path: 'relationalOperators>/relationalOperators',
            templateShareable: false
          }"
          selectedKey="{visualisationState>relationalOperator}"
          tooltip="{i18n>filter.relationalOperator.tooltip}"
          placeholder="{i18n>filter.relationalOperator.placeholder}"
          change="onRelationalOperatorChanged"
        >
        <core:Item
          key="{relationalOperators>id}"
          text="{relationalOperators>symbol}"
        />
        </m:Select>
      </t:template>
    </t:Column>
    <t:Column>
      <t:template>
        <m:VBox
          width="100%"
          visible="{= ${visualisationState>relationalOperator} ? true : false}"
        >
          <m:Input
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueInputVisible'
            }"
            value="{
              path: 'visualisationState>value1'
            }"
            liveChange="onFilterValueChanged"
            change="onFilterValueChanged"
          />
          <m:DatePicker
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueDatePickerVisible'
            }"
            value="{
              path: 'visualisationState>value1'
            }"
            change="onFilterValueChanged"
          />
          <m:DateTimePicker
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueDateTimePickerVisible'
            }"
            value="{
              path: 'visualisationState>value1'
            }"
            change="onFilterValueChanged"
          />
          <m:TimePicker
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueTimePickerVisible'
            }"
            value="{
              path: 'visualisationState>value1'
            }"
            change="onFilterValueChanged"
          />
          <m:ComboBox
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueComboBoxVisible'
            }"
            selectedItem="{visualisationState>value1}"
            selectionChange="onFilterValueChanged"
          >
          </m:ComboBox>
          <m:MultiComboBox
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueMultiComboBoxVisible'
            }"
            selectedKeys="{visualisationState>value1}"
            selectionChange="onFilterValueChanged"
          >
          </m:MultiComboBox>
          <m:DateRangeSelection
            width="100%"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueDateRangeSelectionVisible'
            }"
            change="onFilterValueChanged"
            dateValue="{visualisationState>value1}"
            secondDateValue="{visualisationState>value2}"
          />
          <m:RangeSlider
            width="100%"
            showAdvancedTooltips="true"
            inputsAsTooltips="true"
            enableTickmarks="true"
            visible="{
              parts: [
                {path: 'visualisationState>'},
                {path: 'visualisationState>relationalOperator'},
                {path: 'visualisationState>field'},
                {path: 'visualisationState>logicalOperator'}
              ],
              formatter: '._filterValueRangeSliderVisible'
            }"
            change="onFilterValueChanged"
          />
        </m:VBox>
      </t:template>
    </t:Column>
    <t:Column
        hAlign="Begin"
        width="75px"
    >
      <t:template>
        <m:HBox>
          <m:Button
            icon="sap-icon://clear-filter"
            tooltip="{18n>filter.btnClearFilter.tooltip}"
            press="onRemoveFilterPressed"
            enabled="{= ${visualisationState>level} === 0 ? (${visualisationState>/nodes/0/nodes/0} ? true : false) : true}"
          />
          <m:Button
            icon="sap-icon://add-filter"
            tooltip="{18n>filter.btnAddFilter.tooltip}"
            press="onAddFilterPressed"
            visible="{= ${visualisationState>logicalOperator} ? true : false}"
          />
        </m:HBox>
      </t:template>
    </t:Column>
    <t:Column
        hAlign="Begin"
        width="75px"
    >
      <t:template>
        <m:HBox>
          <m:Button
            icon="sap-icon://outdent"
            tooltip="{18n>filter.btnOutdent.tooltip}"
            press="onOutdentFilterPressed"
            visible="{= ${visualisationState>level} > 1 ? true : false}"
          />
          <m:Button
            icon="sap-icon://indent"
            tooltip="{18n>filter.btnIndent.tooltip}"
            press="onIndentFilterPressed"
            visible="{= ${visualisationState>level} === 0 ? false : true}"
          />
        </m:HBox>
      </t:template>
    </t:Column>
  </t:columns>
</t:TreeTable>
</core:FragmentDefinition>